import String, { concat } from "string"
import Result from "result"
import Fs from "sys/file"

export let stderr = message => {
  Fs.fdWrite(Fs.stderr, message ++ "\n")
  void
}

record Ought {
  should: String,
  did: String,
}

export record Results {
  mut fails: Number,
  mut succeses: Number,
}
export let results = { fails: 0, succeses: 0 }

export let equals = (expected, value) =>
  match (expected == value) {
    false => Err({ should: "\nto equal: ", did: " did not equal " }),
    true => Ok({ should: "equal", did: "equals" }),
  }

export let test = (desc, action, fn, comparator, expected) => {
  let value = fn()
  match (comparator(expected, value)) {
    Err(e) => {
      results.fails += 1
      stderr(
        "❌ " ++
        desc ++
        ": \nexpected " ++
        action ++
        e.should ++
        toString(expected) ++
        "\nbut got: " ++
        toString(value)
      )
    },
    _ => {
      results.succeses += 1
      stderr("✅ " ++ desc ++ ": " ++ action ++ " ✅")
    },
  }
}
